#include <iostream>
#include <vector>

using namespace std;

void printBoard(const vector<vector<char>>& board) {
    // Display the game board
    for (int i = 0; i < 3; ++i) {
        for (int j = 0; j < 3; ++j) {
            cout << board[i][j];
            if (j < 2) cout << " | ";
        }
        cout << endl;
        if (i < 2) cout << "---------" << endl;
    }
}

bool checkWin(const vector<vector<char>>& board, char player) {
    // Check rows, columns, and diagonals for a win
    for (int i = 0; i < 3; ++i) {
        if (board[i][0] == player && board[i][1] == player && board[i][2] == player) return true;  // Row win
        if (board[0][i] == player && board[1][i] == player && board[2][i] == player) return true;  // Column win
    }
    if (board[0][0] == player && board[1][1] == player && board[2][2] == player) return true;      // Diagonal win
    if (board[0][2] == player && board[1][1] == player && board[2][0] == player) return true;      // Diagonal win
    return false;
}

bool checkDraw(const vector<vector<char>>& board) {
    // Check if the board is full (no empty spaces left)
    for (int i = 0; i < 3; ++i)
        for (int j = 0; j < 3; ++j)
            if (board[i][j] == ' ') return false;
    return true;
}

void switchPlayer(char& currentPlayer) {
    // Switch player from X to O or O to X
    currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
}

int main() {
    do {
        // Create a 3x3 board initialized with empty spaces
        vector<vector<char>> board(3, vector<char>(3, ' '));
        char currentPlayer = 'X';
        bool gameWon = false;

        while (!gameWon) {
            cout << "\nCurrent Board:\n";
            printBoard(board);

            int move;
            cout << "Player " << currentPlayer << ", enter your move (1-9): ";
            cin >> move;
            move--;  // Adjust for 0-based indexing

            int row = move / 3;
            int col = move % 3;

            if (move < 0 || move >= 9 || board[row][col] != ' ') {
                cout << "Invalid move! Please try again.\n";
                continue;
            }

            board[row][col] = currentPlayer;

            // Check for win or draw
            if (checkWin(board, currentPlayer)) {
                cout << "\nCongratulations! Player " << currentPlayer << " wins!\n";
                printBoard(board);
                gameWon = true;
                break;
            } else if (checkDraw(board)) {
                cout << "\nIt's a draw!\n";
                printBoard(board);
                break;
            }

            switchPlayer(currentPlayer);  // Alternate the player
        }

        char playAgain;
        cout << "\nDo you want to play again? (y/n): ";
        cin >> playAgain;
        if (playAgain != 'y' && playAgain != 'Y') {
            cout << "Thanks for playing! Goodbye!\n";
            break;
        }

    } while (true);

    return 0;
}
